def receiver_container
pipeline {


 environment {
    dockerimagename = "koonsingrp/22050108_webimage"
    dockerImage = ""
  }


    agent {
        node {
            label 'master'
        }
    }
  
    stages {
        
     stage('Stage 1_22050108') {
            steps {
                echo "S1_22050108 : Environment Preparation Completed"
            }
        } 
        
        
        stage('Stage 2_22050108') {
            steps {
                script {
                  dockerImage = docker.build dockerimagename
                 // receiver_container = dockerImage.run("--name S2_22050108_Server -u root:root -p 42000:80  -v /var/run/docker.sock:/var/run/docker.sock ");
                   }
  	  	sh "docker-compose up -d  "
                 echo "S2_22050108 : Web Server Creation Completed"
            }
        }
        stage('Stage Parallel') {
                parallel {
                stage('Stage 3_22050108') {
                    steps {

                        echo "S3_22050108 : API Test Completed"
                    }
                }
                stage('Stage 4_22050108') {
                    steps {

                        echo "S4_22050108 : DAST Security Test Completed"
                    }
                }
               } 
        
        }
        stage('Stage 5_22050108') {
            input {
                message "Do you want to release the work?"
                ok "Yes"
            }
              steps {
                 echo "Yes Selected"
                }
        }
        stage('Stage 6_22050108') {
        
             environment {
               registryCredential = 'dockerhublogin'
             }
             
            steps {
             script {
               docker.withRegistry( 'https://registry.hub.docker.com', registryCredential ) {
               dockerImage.push("latest")
             
                }
            }
               echo "Work Released - 22050108"
            }
        }
        
         
       

    }   
    post {
    	always {
	
		script {
		
              		sh "docker-compose down  "
             
                }
	}
    }
}
